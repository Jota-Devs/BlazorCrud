@page "/personaform"
@page "/personaform/{Id:int}"


@using Data
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>PersonaForm</h3>

<EditForm Model="@oPersona">
    <div class="container-fluid">
        <div class="form-group row mb-1">
            <label class="col-sm-3">Nombre</label>
            <div class="col-sm-9">
                <InputText class="form-control" @bind-Value="@oPersona.Name"></InputText>
            </div>
        </div>
        <div class="form-group row mb-1">
            <div class="col-sm-12">
                <button class="btn btn-primary" @onclick="Save">Create</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    Persona oPersona = new Persona();
    Respuesta<object> oRespuesta = new Respuesta<object>();
    Respuesta<Persona> oRespuestaPersona = new Respuesta<Persona>();
    public string url = "/api/Persona";

    private async Task Save()
    {
        if(Id != 0)
        {
            var response = await Http.PutAsJsonAsync<Persona>(url, oPersona);
            oRespuesta = response.Content.ReadFromJsonAsync<Respuesta<object>>().Result;
        }
        else
        {
            var response = await Http.PostAsJsonAsync<Persona>(url, oPersona);
            oRespuesta = response.Content.ReadFromJsonAsync<Respuesta<object>>().Result;
        }

        NavigationManager.NavigateTo("/personas");
    }

    protected override async Task OnInitializedAsync()
    {
        if(Id != 0)
        {
        oRespuestaPersona = await Http.GetFromJsonAsync<Data.Respuesta<Persona>>(url + "/" + Id);
        oPersona = oRespuestaPersona.Data;

        }
    }
}
